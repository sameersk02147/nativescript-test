
branches:
  only: 
    - master
    - label-automationtext-issue

addons:
  homebrew:
    brewfile: true

cache: bundler

jobs:
  include:
    - stage: "UI Tests"
      os: osx
      osx_image: xcode10.2
      language: node_js
      node_js: "8"
      install:
        - npm i -g nativescript@5.4
        - npm i -g appium@1.13.0
        - npm install -g ios-deploy
        - npm i
      script: 
        - tns build ios
        - find platforms -name *.app | xargs npm run e2e -- --runType sim.iPhone6  --appPath #$IOS_PACKAGE

    - os: linux
      env:
        - BuildAndroid="28"
      android:
        components:
          - tools
          - platform-tools
          - build-tools-28.0.3
          - android-28
          - android-27
          - android-25
          - extra-android-m2repository
          - sys-img-armeabi-v7a-android-21
      language: android
      node_js: "8"
      jdk: oraclejdk8
      before_cache:
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
      before_install: 
        - touch ~/.android/repositories.cfg
        - nvm install v10.16.0
        - $ANDROID_HOME/tools/emulator -accel-check
        - $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-27;google_apis_playstore;x86" <<< $'y\ny\n'
        - $ANDROID_HOME/tools/bin/sdkmanager --licenses <<< $'y\ny\ny\ny\n'
        - $ANDROID_HOME/tools/bin/avdmanager create avd -n test-emulator -k "system-images;android-25;google_apis;x86_64" <<< $'no\n'
      install:
        - npm i -g nativescript@5.4
        - npm i -g appium@1.13.0
      script:
        - $ANDROID_HOME/emulator/emulator -avd test-emulator -memory 1500 -no-boot-anim -wipe-data -noaudio -no-snapshot-load -no-accel -gpu swiftshader_indirect -no-snapstorage -no-snapshot-save &
        - travis_wait travis_retry tns build android
        - find platforms -name *.apk | xargs npm run e2e -- --runType test --verbose --reuseDevice --appPath
